/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define SYM 1
#define NAV 2

/ {
  macros {
    del_word: macro_del_word {
      compatible = "zmk,behavior-macro";
      label = "macro_del_word";
      #binding-cells = <0>;
      bindings
        = <&macro_press &kp LALT>
        , <&macro_tap &kp BSPC>
        , <&macro_release &kp LALT>
        ;
    };

    nextab: macro_nextab {
      compatible = "zmk,behavior-macro";
      label = "macro_nextab";
      #binding-cells = <0>;
      wait-ms = <20>;
      bindings
        = <&macro_press &kp LCTRL>
        , <&macro_tap &kp TAB>
        , <&macro_release &kp LCTRL>
        ;
    };

    prvtab: macro_prvtab {
      compatible = "zmk,behavior-macro";
      label = "macro_prvtab";
      #binding-cells = <0>;
      wait-ms = <20>;
      bindings
        = <&macro_press &kp LCTRL>
        , <&macro_press &kp LSHIFT>
        , <&macro_tap &kp TAB>
        , <&macro_release &kp LSHIFT>
        , <&macro_release &kp LCTRL>
        ;
    };
  };

  behaviors {
    ht: hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "hold_tap";
      #binding-cells = <2>;
      tapping-term-ms = <250>;
      quick-tap-ms = <100>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
    };
    
    ht_bspc: ht_delword_bspc {
      compatible = "zmk,behavior-hold-tap";
      label = "ht_delword_bspc";
      #binding-cells = <2>;
      tapping-term-ms = <500>;
      quick_tap_ms = <100>;
      flavor = "tap-preferred";
      bindings = <&del_word>, <&kp>;
    };

    // td_bspc: tapdance_bspc {
    //   compatible = "zmk,behavior-tap-dance";
    //   label = "tapdance_bspc";
    //   #binding-cells = <0>;
    //   tapping-term-ms = <200>;
    //   bindings = <&kp BSPC>, <&del_word>;
    // };
  };

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &ht ESC Q  &ht GRAVE W  &ht TAB E  &kp R  &kp T  &kp Y   &kp U  &ht TAB I  &kp O  &ht DEL P
        &ht LSHIFT A &ht LCTRL S &ht LALT D &ht LGUI F &ht CAPS G &ht CAPS SQT &ht RGUI H &ht RALT J &ht RCTRL K &ht RSHIFT L
        &kp Z &kp X &kp C &kp V &kp COMMA &kp DOT &kp B &kp N &kp M &kp FSLH
        &lt SYM TAB &kp SPACE &ht_bspc 0 BSPC &lt NAV LS(TAB)
      >;
    };

    symbol_layer {
      // esc, grave, tab, n0-9, [, ], -, =, |, wasd,
      bindings = <
        &kp GRAVE &kp TAB &none &none &none &n  one &none &none &none &kp DEL
        &ht LSHIFT N5 &ht LALT N6 &ht LCTRL N7 &ht LGUI N8 &ht CAPS N9 &ht CAPS N0 &ht RGUI N1 &ht RCTRL N2 &ht RALT N3 &ht RSHIFT N4
        &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp N1 &kp N2 &kp N3 &kp N4
        &trans &trans &trans &trans
      >;
    };

    navigation_layer {
      bindings = <
        &bt BT_NXT  &prvtab   &kp UP  &nextab &none &none &none &none &none &none
        &bt BT_PRV  &kp LEFT     &kp DOWN   &kp RIGHT  &none &none &none &none &none &none
        &bt BT_CLR  &none     &none   &none   &none &none &none &none &none &reset
        &trans &trans &trans &trans
      >;
    };
  };
};